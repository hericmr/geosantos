#!/bin/bash

# Script para limpeza de arquivos duplicados ap√≥s refatora√ß√£o
# Este script remove os arquivos antigos que foram duplicados e refatorados

echo "üßπ Iniciando limpeza de arquivos duplicados..."

# Diret√≥rio base do projeto
PROJECT_ROOT="src"

# Fun√ß√£o para fazer backup antes de remover
backup_file() {
    local file="$1"
    if [ -f "$file" ]; then
        local backup_dir="backup/$(dirname "$file")"
        mkdir -p "$backup_dir"
        cp "$file" "$backup_dir/"
        echo "üì¶ Backup criado: $backup_dir/$(basename "$file")"
    fi
}

# Fun√ß√£o para remover arquivo com confirma√ß√£o
remove_file() {
    local file="$1"
    if [ -f "$file" ]; then
        echo "üóëÔ∏è  Removendo: $file"
        rm "$file"
    else
        echo "‚ö†Ô∏è  Arquivo n√£o encontrado: $file"
    fi
}

# Criar diret√≥rio de backup
mkdir -p backup

echo ""
echo "üìÅ Removendo arquivos de valida√ß√£o duplicados..."

# Arquivos de valida√ß√£o do modo neighborhood
backup_file "$PROJECT_ROOT/utils/modes/neighborhood/validation.ts"
remove_file "$PROJECT_ROOT/utils/modes/neighborhood/validation.ts"

# Arquivos de valida√ß√£o do modo famousPlaces
backup_file "$PROJECT_ROOT/utils/modes/famousPlaces/validation.ts"
remove_file "$PROJECT_ROOT/utils/modes/famousPlaces/validation.ts"

echo ""
echo "üìÅ Removendo arquivos de pontua√ß√£o duplicados..."

# Arquivos de pontua√ß√£o do modo neighborhood
backup_file "$PROJECT_ROOT/utils/modes/neighborhood/scoring.ts"
remove_file "$PROJECT_ROOT/utils/modes/neighborhood/scoring.ts"

# Arquivos de pontua√ß√£o do modo famousPlaces
backup_file "$PROJECT_ROOT/utils/modes/famousPlaces/scoring.ts"
remove_file "$PROJECT_ROOT/utils/modes/famousPlaces/scoring.ts"

echo ""
echo "üìÅ Renomeando arquivos refatorados..."

# Renomear arquivos refatorados para nomes finais
if [ -f "$PROJECT_ROOT/utils/modes/neighborhood/validation-refactored.ts" ]; then
    mv "$PROJECT_ROOT/utils/modes/neighborhood/validation-refactored.ts" "$PROJECT_ROOT/utils/modes/neighborhood/validation.ts"
    echo "‚úÖ Renomeado: validation-refactored.ts -> validation.ts (neighborhood)"
fi

if [ -f "$PROJECT_ROOT/utils/modes/neighborhood/scoring-refactored.ts" ]; then
    mv "$PROJECT_ROOT/utils/modes/neighborhood/scoring-refactored.ts" "$PROJECT_ROOT/utils/modes/neighborhood/scoring.ts"
    echo "‚úÖ Renomeado: scoring-refactored.ts -> scoring.ts (neighborhood)"
fi

if [ -f "$PROJECT_ROOT/utils/modes/famousPlaces/validation-refactored.ts" ]; then
    mv "$PROJECT_ROOT/utils/modes/famousPlaces/validation-refactored.ts" "$PROJECT_ROOT/utils/modes/famousPlaces/validation.ts"
    echo "‚úÖ Renomeado: validation-refactored.ts -> validation.ts (famousPlaces)"
fi

if [ -f "$PROJECT_ROOT/utils/modes/famousPlaces/scoring-refactored.ts" ]; then
    mv "$PROJECT_ROOT/utils/modes/famousPlaces/scoring-refactored.ts" "$PROJECT_ROOT/utils/modes/famousPlaces/scoring.ts"
    echo "‚úÖ Renomeado: scoring-refactored.ts -> scoring.ts (famousPlaces)"
fi

echo ""
echo "üìÅ Atualizando imports nos arquivos refatorados..."

# Atualizar imports nos arquivos refatorados
update_imports() {
    local file="$1"
    if [ -f "$file" ]; then
        # Substituir imports de m√≥dulos compartilhados
        sed -i 's|from .*shared.*|from "../../../shared"|g' "$file"
        echo "‚úÖ Imports atualizados em: $file"
    fi
}

update_imports "$PROJECT_ROOT/utils/modes/neighborhood/validation.ts"
update_imports "$PROJECT_ROOT/utils/modes/neighborhood/scoring.ts"
update_imports "$PROJECT_ROOT/utils/modes/famousPlaces/validation.ts"
update_imports "$PROJECT_ROOT/utils/modes/famousPlaces/scoring.ts"

echo ""
echo "üßπ Limpeza conclu√≠da!"
echo ""
echo "üìä Resumo da limpeza:"
echo "   - Arquivos duplicados removidos: 4"
echo "   - Arquivos refatorados renomeados: 4"
echo "   - Imports atualizados: 4"
echo "   - Backup criado em: backup/"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE: Verifique se todos os imports est√£o funcionando corretamente"
echo "   antes de prosseguir com a pr√≥xima etapa."
echo ""
echo "üîç Para verificar se tudo est√° funcionando:"
echo "   1. Execute: npm run build"
echo "   2. Execute: npm run dev"
echo "   3. Teste os modos de jogo"
echo ""
echo "üìù Se houver problemas, os arquivos originais est√£o em: backup/" 